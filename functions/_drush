#compdef drush
local expl context state line cmd args ret=1

if (( ! $+_drush_cmds )); then
  typeset -gH _drush_cmds
  _drush_cmds=(${(f)"$(_call_program drush drush shell-complete)"})
fi


_arguments -C \
  '(-r --root=)'{-r,--root=}'[Drupal root directory]' \
  '(-l --uri=)'{-l,--uri=}'[URI of the drupal site]' \
  '(-v --verbose)'{-v,--verbose}'[Display extra information]' \
  '(-d --debug)'{-d,--debug}'[Display even more information]' \
  '1: :->cmd' \
  '*:: :->args' && ret=0

if [[ $state != 'args' ]]; then
  _describe -t subcommand 'subcommand' _drush_cmds
  return 0
fi

cmd="$words[1]"
args=(${(f)"$(_call_program drush drush shell-complete --options $cmd)"})

case $cmd in
  (cache-clear)
    local -a _cache_clear_arguments
    _cache_clear_arguments=(
      'all:Clear all caches'
      'theme:Clear theme registry'
      'menu:Rebuild menu'
      'css+js:Clear css and js'
    )
    _describe -t commands "clear cache subcommand" _cache_clear_arguments ;;
  (pm-enable|en|pm-disable|dis|pm-uninstall|pm-updatecode|upc|pm-update|up|pm-info)
    local -a _modules
    _modules=(${(f)"$(_call_program drush drush --pipe pm-list)"})
    _describe -t commands "module subcommand" _modules
    ;;
  (sql-dump)
    args=("--result-file=+[save to a file]:result directory:_files -/")
  ;;
  (pm-download)
    _drupal_remote_directories;;
esac

_arguments -s "$args[@]" && ret=0
return $ret

_drupal_remote_directories() {
  _drush_cvs_remote_directories "-d:pserver:anonymous:anonymous@cvs.drupal.org:/cvs/drupal-contrib" contributions/modules/
}

_drush_cvs_run() {
  local cvsroot="$1" dir="$2"
  shift 2
  local d=/tmp/zsh-cvs-work-$$
  mkdir $d >&/dev/null
  cd $d
  mkdir CVS >&/dev/null
  print -r - "$cvsroot" > CVS/Root
  print "$dir" > CVS/Repository
  print D > CVS/Entries
  CVS_IGNORE_REMOTE_ROOT= cvs "$@"
  cd $OLDPWD
  rm -rf $d
}
_drush_cvs_remote_directories() {
  local root="$1" dir="$2" subdirs
  shift 2
  subdirs=(${${(M)${(f)"$(_call_program directories _drush_cvs_run "$root" "$dir" update -r00 -d -p 2>&1)"}:#* New directory \`*\' -- ignored}/(#b)*\`(*)\'*/$match[1]})
  if (( $# )); then
    eval "$1=(\"\$subdirs[@]\")"
  else
    if (( $#subdirs )); then
      print -lr - $subdirs
    fi
  fi
}
